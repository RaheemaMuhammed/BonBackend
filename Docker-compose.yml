services:
    nginx:
        restart: always
        build:
          context: ./proxy/
        #   dockerfile: Dockerfile.nginx
        ports:
          - 80:80
          - 443:443
        depends_on:
          - backend
        volumes:
          - static_volume:/vol/app/static
          - media_volume:/vol/app/media
          - certbot-web:/vol/www
          - certbot-dhparams:/vol/proxy
          - certbot-certs:/etc/letsencrypt
        environment:
            - DOMAIN=${DOMAIN}
    backend:
        restart: always
        build: .
        entrypoint: /app/server-entrypoint.sh
        volumes:
            - static_volume:/vol/app/static 
            - ./db.sqlite3:/app/db.sqlite3
            - media_volume:/vol/app/media
        ports:
            - "8000:8000"
        env_file:
            - ./.env
        depends_on:
            - redis

    worker:
        restart: always
        build: . 
        entrypoint: /app/worker-entrypoint.sh
        volumes:
            - static_volume:/vol/app/static
            - media_volume:/vol/app/media
        environment:
            DEBUG: "True"
            CELERY_BROKER_URL: "redis://redis:6379/0"
        depends_on:
            - backend
            - redis
    beat:
        restart: always
        build: . 
        entrypoint: /app/beat-entrypoint.sh
        volumes:
            - static_volume:/vol/app/static
            - media_volume:/vol/app/media
        environment:
            DEBUG: "True"
            CELERY_BROKER_URL: "redis://redis:6379/0"
        depends_on:
            - backend
            - redis
    redis:
        restart: always
        image: redis:7.0.5-alpine 
        expose:
            - 6379
    certbot:
        build: 
           context: ./certbot
        command: echo "Skipping"
        environment:
            - EMAIL=${ACME_DEFAULT_EMAIL}
            - DOMAIN=${DOMAIN}
        volumes:
            - certbot-web:/vol/www
            - certbot-certs:/etc/letsencrypt/
        depends_on:
            - nginx
    
    
    
    
volumes:
    static_volume:
    media_volume:
    db_data:
    certbot-web:
    certbot-certs:
    proxy-dhparams:

    